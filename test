
void move_node_to_right(listint_t **head, listint_t *node)
{
	listint_t *nextNode = node->next;
	if (*head == NULL || node == NULL || node->next == NULL)
		return;

	if (node->prev != NULL)
		node->prev->next = nextNode;
	else
		*head = nextNode;

	if (nextNode->next != NULL)
		nextNode->next->prev = node;

	node->next = nextNode->next;
	node->prev = nextNode;
	nextNode->next = node;
	nextNode->prev = node->prev;
}


void swap(listint_t **head)
{
	listint_t *temp = (*head)->next;
	listint_t *temp1 = temp->next;

	if (*head == NULL || (*head)->next == NULL)
		return;
	(*head)->next = temp1;
	(*head)->prev = temp;

	temp->prev = NULL;
	temp->next = *head;

	if (temp1 != NULL)
		temp1->prev = *head;

	*head = temp;
}


int is_smaller(listint_t *head, listint_t *node)
{
	if (head->n > node->n)
		return 1;
	return (0);
}